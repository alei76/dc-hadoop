// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.25 by WSRD Tencent.
// Generated from `playerinfo.jce'
// **********************************************************************

package net.digitcube.hadoop.jce;

import net.digitcube.protocol.JceDisplayer;
import net.digitcube.protocol.JceInputStream;
import net.digitcube.protocol.JceOutputStream;
import net.digitcube.protocol.JceStruct;
import net.digitcube.protocol.JceUtil;

public final class PlayerInfoMap extends JceStruct implements
		java.lang.Cloneable {
	public String className() {
		return "PlayerInfo.PlayerInfoMap";
	}

	public String fullClassName() {
		return "PlayerInfoMap";
	}

	public java.util.Map<String, PlayerInfoForHbase> playerInfoMap = null;

	public java.util.Map<String, PlayerInfoForHbase> getPlayerInfoMap() {
		return playerInfoMap;
	}

	public void setPlayerInfoMap(
			java.util.Map<String, PlayerInfoForHbase> playerInfoMap) {
		this.playerInfoMap = playerInfoMap;
	}

	public PlayerInfoMap() {
		setPlayerInfoMap(playerInfoMap);
	}

	public PlayerInfoMap(java.util.Map<String, PlayerInfoForHbase> playerInfoMap) {
		setPlayerInfoMap(playerInfoMap);
	}

	public boolean equals(Object o) {
		if (o == null) {
			return false;
		}

		PlayerInfoMap t = (PlayerInfoMap) o;
		return (JceUtil.equals(playerInfoMap, t.playerInfoMap));
	}

	public int hashCode() {
		try {
			throw new Exception("Need define key first!");
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return 0;
	}

	public java.lang.Object clone() {
		java.lang.Object o = null;
		try {
			o = super.clone();
		} catch (CloneNotSupportedException ex) {
			assert false; // impossible
		}
		return o;
	}

	public void writeTo(JceOutputStream _os) {
		_os.write(playerInfoMap, 0);
	}

	static java.util.Map<String, PlayerInfoForHbase> cache_playerInfoMap;

	public void readFrom(JceInputStream _is) {
		if (null == cache_playerInfoMap) {
			cache_playerInfoMap = new java.util.HashMap<String, PlayerInfoForHbase>();
			String __var_5 = "";
			PlayerInfoForHbase __var_6 = new PlayerInfoForHbase();
			cache_playerInfoMap.put(__var_5, __var_6);
		}
		setPlayerInfoMap((java.util.Map<String, PlayerInfoForHbase>) _is.read(
				cache_playerInfoMap, 0, true));

	}

	public void display(java.lang.StringBuilder _os, int _level) {
		JceDisplayer _ds = new JceDisplayer(_os, _level);
		_ds.display(playerInfoMap, "playerInfoMap");
	}

}
