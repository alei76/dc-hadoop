// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.25 by WSRD Tencent.
// Generated from `item.jce'
// **********************************************************************

package net.digitcube.hadoop.jce.UserExtendInfoLog;

import net.digitcube.protocol.JceDisplayer;
import net.digitcube.protocol.JceInputStream;
import net.digitcube.protocol.JceOutputStream;
import net.digitcube.protocol.JceStruct;
import net.digitcube.protocol.JceUtil;

public final class ItemDayInfo extends JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "UserExtendInfoLog.ItemDayInfo";
    }

    public String fullClassName()
    {
        return "net.digitcube.hadoop.jce.UserExtendInfoLog.ItemDayInfo";
    }

    public String itemId = "";

    public String itemType = "";

    public int buyCount = 0;

    public int gainCount = 0;

    public int useCount = 0;

    public java.util.Map<String, Integer> buyMap = null;

    public java.util.Map<String, Integer> buyCntMap = null;

    public java.util.Map<String, Integer> gainCntMap = null;

    public java.util.Map<String, Integer> useCntMap = null;

    public String getItemId()
    {
        return itemId;
    }

    public void  setItemId(String itemId)
    {
        this.itemId = itemId;
    }

    public String getItemType()
    {
        return itemType;
    }

    public void  setItemType(String itemType)
    {
        this.itemType = itemType;
    }

    public int getBuyCount()
    {
        return buyCount;
    }

    public void  setBuyCount(int buyCount)
    {
        this.buyCount = buyCount;
    }

    public int getGainCount()
    {
        return gainCount;
    }

    public void  setGainCount(int gainCount)
    {
        this.gainCount = gainCount;
    }

    public int getUseCount()
    {
        return useCount;
    }

    public void  setUseCount(int useCount)
    {
        this.useCount = useCount;
    }

    public java.util.Map<String, Integer> getBuyMap()
    {
        return buyMap;
    }

    public void  setBuyMap(java.util.Map<String, Integer> buyMap)
    {
        this.buyMap = buyMap;
    }

    public java.util.Map<String, Integer> getBuyCntMap()
    {
        return buyCntMap;
    }

    public void  setBuyCntMap(java.util.Map<String, Integer> buyCntMap)
    {
        this.buyCntMap = buyCntMap;
    }

    public java.util.Map<String, Integer> getGainCntMap()
    {
        return gainCntMap;
    }

    public void  setGainCntMap(java.util.Map<String, Integer> gainCntMap)
    {
        this.gainCntMap = gainCntMap;
    }

    public java.util.Map<String, Integer> getUseCntMap()
    {
        return useCntMap;
    }

    public void  setUseCntMap(java.util.Map<String, Integer> useCntMap)
    {
        this.useCntMap = useCntMap;
    }

    public ItemDayInfo()
    {
        setItemId(itemId);
        setItemType(itemType);
        setBuyCount(buyCount);
        setGainCount(gainCount);
        setUseCount(useCount);
        setBuyMap(buyMap);
        setBuyCntMap(buyCntMap);
        setGainCntMap(gainCntMap);
        setUseCntMap(useCntMap);
    }

    public ItemDayInfo(String itemId, String itemType, int buyCount, int gainCount, int useCount, java.util.Map<String, Integer> buyMap, java.util.Map<String, Integer> buyCntMap, java.util.Map<String, Integer> gainCntMap, java.util.Map<String, Integer> useCntMap)
    {
        setItemId(itemId);
        setItemType(itemType);
        setBuyCount(buyCount);
        setGainCount(gainCount);
        setUseCount(useCount);
        setBuyMap(buyMap);
        setBuyCntMap(buyCntMap);
        setGainCntMap(gainCntMap);
        setUseCntMap(useCntMap);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        ItemDayInfo t = (ItemDayInfo) o;
        return (
            JceUtil.equals(itemId, t.itemId) && 
            JceUtil.equals(itemType, t.itemType) && 
            JceUtil.equals(buyCount, t.buyCount) && 
            JceUtil.equals(gainCount, t.gainCount) && 
            JceUtil.equals(useCount, t.useCount) && 
            JceUtil.equals(buyMap, t.buyMap) && 
            JceUtil.equals(buyCntMap, t.buyCntMap) && 
            JceUtil.equals(gainCntMap, t.gainCntMap) && 
            JceUtil.equals(useCntMap, t.useCntMap) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(JceOutputStream _os)
    {
        if (null != itemId)
        {
            _os.write(itemId, 0);
        }
        if (null != itemType)
        {
            _os.write(itemType, 1);
        }
        _os.write(buyCount, 2);
        _os.write(gainCount, 3);
        _os.write(useCount, 4);
        if (null != buyMap)
        {
            _os.write(buyMap, 5);
        }
        if (null != buyCntMap)
        {
            _os.write(buyCntMap, 6);
        }
        if (null != gainCntMap)
        {
            _os.write(gainCntMap, 7);
        }
        if (null != useCntMap)
        {
            _os.write(useCntMap, 8);
        }
    }

    static java.util.Map<String, Integer> cache_buyMap;
    static java.util.Map<String, Integer> cache_buyCntMap;
    static java.util.Map<String, Integer> cache_gainCntMap;
    static java.util.Map<String, Integer> cache_useCntMap;

    public void readFrom(JceInputStream _is)
    {
        setItemId( _is.readString(0, false));

        setItemType( _is.readString(1, false));

        setBuyCount((int) _is.read(buyCount, 2, false));

        setGainCount((int) _is.read(gainCount, 3, false));

        setUseCount((int) _is.read(useCount, 4, false));

        if(null == cache_buyMap)
        {
            cache_buyMap = new java.util.HashMap<String, Integer>();
            String __var_1 = "";
            Integer __var_2 = 0;
            cache_buyMap.put(__var_1, __var_2);
        }
        setBuyMap((java.util.Map<String, Integer>) _is.read(cache_buyMap, 5, false));

        if(null == cache_buyCntMap)
        {
            cache_buyCntMap = new java.util.HashMap<String, Integer>();
            String __var_3 = "";
            Integer __var_4 = 0;
            cache_buyCntMap.put(__var_3, __var_4);
        }
        setBuyCntMap((java.util.Map<String, Integer>) _is.read(cache_buyCntMap, 6, false));

        if(null == cache_gainCntMap)
        {
            cache_gainCntMap = new java.util.HashMap<String, Integer>();
            String __var_5 = "";
            Integer __var_6 = 0;
            cache_gainCntMap.put(__var_5, __var_6);
        }
        setGainCntMap((java.util.Map<String, Integer>) _is.read(cache_gainCntMap, 7, false));

        if(null == cache_useCntMap)
        {
            cache_useCntMap = new java.util.HashMap<String, Integer>();
            String __var_7 = "";
            Integer __var_8 = 0;
            cache_useCntMap.put(__var_7, __var_8);
        }
        setUseCntMap((java.util.Map<String, Integer>) _is.read(cache_useCntMap, 8, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
         JceDisplayer _ds = new JceDisplayer(_os, _level);
        _ds.display(itemId, "itemId");
        _ds.display(itemType, "itemType");
        _ds.display(buyCount, "buyCount");
        _ds.display(gainCount, "gainCount");
        _ds.display(useCount, "useCount");
        _ds.display(buyMap, "buyMap");
        _ds.display(buyCntMap, "buyCntMap");
        _ds.display(gainCntMap, "gainCntMap");
        _ds.display(useCntMap, "useCntMap");
    }


}

