// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0.25 by WSRD Tencent.
// Generated from `playerinfo.jce'
// **********************************************************************

package net.digitcube.hadoop.jce;

import net.digitcube.protocol.JceDisplayer;
import net.digitcube.protocol.JceInputStream;
import net.digitcube.protocol.JceOutputStream;
import net.digitcube.protocol.JceStruct;
import net.digitcube.protocol.JceUtil;

public final class PayInfo extends JceStruct implements java.lang.Cloneable {
	public String className() {
		return "PlayerInfo.PayInfo";
	}

	public String fullClassName() {
		return "net.digitcube.hadoop.jce.PlayerInfo.PayInfo";
	}

	public int payDay = 0;

	public int payAmount = 0;

	public int payTimes = 0;

	public int getPayDay() {
		return payDay;
	}

	public void setPayDay(int payDay) {
		this.payDay = payDay;
	}

	public int getPayAmount() {
		return payAmount;
	}

	public void setPayAmount(int payAmount) {
		this.payAmount = payAmount;
	}

	public int getPayTimes() {
		return payTimes;
	}

	public void setPayTimes(int payTimes) {
		this.payTimes = payTimes;
	}

	public PayInfo() {
		setPayDay(payDay);
		setPayAmount(payAmount);
		setPayTimes(payTimes);
	}

	public PayInfo(int payDay, int payAmount, int payTimes) {
		setPayDay(payDay);
		setPayAmount(payAmount);
		setPayTimes(payTimes);
	}

	public boolean equals(Object o) {
		if (o == null) {
			return false;
		}

		PayInfo t = (PayInfo) o;
		return (JceUtil.equals(payDay, t.payDay)
				&& JceUtil.equals(payAmount, t.payAmount) && JceUtil.equals(
				payTimes, t.payTimes));
	}

	public int hashCode() {
		try {
			throw new Exception("Need define key first!");
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return 0;
	}

	public java.lang.Object clone() {
		java.lang.Object o = null;
		try {
			o = super.clone();
		} catch (CloneNotSupportedException ex) {
			assert false; // impossible
		}
		return o;
	}

	public void writeTo(JceOutputStream _os) {
		_os.write(payDay, 0);
		_os.write(payAmount, 1);
		_os.write(payTimes, 2);
	}

	public void readFrom(JceInputStream _is) {
		setPayDay((int) _is.read(payDay, 0, true));

		setPayAmount((int) _is.read(payAmount, 1, true));

		setPayTimes((int) _is.read(payTimes, 2, true));

	}

	public void display(java.lang.StringBuilder _os, int _level) {
		JceDisplayer _ds = new JceDisplayer(_os, _level);
		_ds.display(payDay, "payDay");
		_ds.display(payAmount, "payAmount");
		_ds.display(payTimes, "payTimes");
	}

}
